/*
 *    1. 클래스 구성 요소
 *    class ClassName
 *    {
 *       -------------------
 *        변수(인스턴스, 멤버, 공유)
 *          = 따로 저장되는 변수 (인스턴스 변수 => new)
 *          = 공통 저장 변수 (컴파일러에 의해 자동 생성) => 한개의 메모리만 생성
 *       -------------------
 *         메소드(멤버메소드) => static이 없는 메소드
 *       -------------------
 *         생성자 : 멤버변수의 초기화, 객체 생성시에 호출되는 메소드 
 *       -------------------
 *    }
 *    
 *    *** class블럭에서는 연산자, 제어문을 사용할 수 없다.
 *        선언만 가능하다. 변수값을 지정할때는 선언과 동시에 설정한다.
 *        int i; ---------(O) //선언
 *        int i=100; -----(O) //변수값을 지정할때는 선언과 동시에 설정
 *        
 *        int i;i=100; ---(X)
 *    ---------------------------------------------------------
 *    1. 객체 지향 프로그램 (OOP = Object Oriented Program) ==> 부품 조립
 *       = 여러개의 클래스를 만들어서 => 조립하는 프로그램 => CBD(Component Based Development)
 *       예) 휍 사이트
 *          회원 : 회원가입, 회원 탈퇴, 회원수정, 로그인, 로그아웃, 아이디찾기...
 *          --- 부품1
 *          게시판 : 글쓰기, 수정, 상세보기, 삭제, 찾기...
 *          ---- 부품2
 *          맛집 : 목록, 상세보기, 댓글, 찾기, 추천, 예약...
 *          --- 부품3
 *          ----------------------------------------------------
 *    2. 객체 (객체지향의 객체?, 객체지향의 특성(캡슐화, 다양성,추상화, 상속))
 *       ---
 *       물리적으로 존재하는 것(눈에 보인다.)
 *       예) 자동차, 사람, 책 ... 
 *          자동차
 *           = 차량종류, 속도, 생상... (속성) ========> 변수
 *           = 달린다, 속도높이기, 속도줄이기...(동작) ==> 메소드  
 *       추상적인 것(회사, 날씨, 동물...게임) => 속성, 동작
 *       ==> 자바에서 모델링 : 변수/메소드 
 *       
 *          사람      ====> class 사람{
 *           이름               String name,
 *           성별                      sex,
 *           주민번호                   jumin;
 *           나이               int age;     
 *           먹는다                  ...
 *           달린다                  ...
 *           걷는다                  ...
 *           말한다                  ...
 *                         }
 *     3. 객체지향 => 클래스끼리 상호작용을 한다.
 *        class 사람  ==> actor ==> 주가되는 class
 *        {
 *           계산기
 *        }
 *        class 계산기
 *        {
 *        }                     
 *        
 *        객체와 클래스
 *        
 *        집 만들기
 *        설계 ====> 집완성
 *        설계 ====================> 완성(활용=> 메모리에 저장)
 *        --                        ------------------
 *        클래스                            객체 
 *        class          ========>    new className() ==> 객체.메소드(변수)
 *        {                          
 *            변수,메소드 ...
 *        }
 *        
 *        클래스로부터 객체를 생성하기 위해서는 변수/메소드가 정의
 *                                   -------
 *        클래스를 저장하면 인스턴스(객체)
 *        A a = new A() 
 *          - 객체명
 *      int a =10;
 *          - 변수명
 *          
 *        => 하나의 클래스로부터 여러개의 객체 생성이 가능하다.
 *        => 클래스는 한개에 대한 정보를 가지고 있다.
 *        => 데이터 따로 저장하기 위해서는 new연산자를 이용한다.
 *           => new는 새로운 메모리 공간을 만들어 준다.
 *           => 사용법
 *              new 클래스명()   
 *          
 *          class A
 *          {
 *             int a;
 *             int b;
 *             String s; // 주소는 4byte
 *             static int a; //12byte
 *          }
 *          
 *                                       
 */         
public class 클래스_변수정리 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
